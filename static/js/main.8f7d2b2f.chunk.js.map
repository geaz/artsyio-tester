{"version":3,"sources":["assets/logo.png","components/IconButton.tsx","model/ComboDefinition.ts","components/ArtseyInput.tsx","effects/KeyMapperEffect.ts","model/KeyMapDefinition.ts","components/KeyMapper.tsx","App.tsx","components/Typography.tsx","index.tsx"],"names":["StyledIconButton","styled","button","_templateObject","_taggedTemplateLiteral","p","theme","textColorFaded","IconButton","props","_jsx","className","active","disabled","title","tooltip","onClick","children","icon","FontAwesomeIcon","Combos","StyledArtseyInput","div","cursorColor","textColor","colorRed","ArtseyInput","wordDivRef","useRef","isFocused","setFocused","useState","keyQueue","setKeyQueue","caretPos","setCaretPos","wordList","setWordList","randomWords","enteredKeys","setEnteredKeys","startTime","setStartTime","wpm","setWpm","getArtseyValue","mapping","keymap","queue","mappedKeys","i","length","foundKey","Object","keys","find","v","fromKey","key","undefined","push","comboKeyCode","map","m","toCode","sort","reduce","pre","cur","toKey","hasOwnProperty","useEffect","reset","interval","setInterval","artsyKey","registerKey","calculateWpm","keyTimeout","clearInterval","_wordDivRef$current","current","focus","Date","getTime","Math","round","joinedWordList","join","prev","slice","split","_jsxs","id","tabIndex","onFocus","onBlur","onKeyUp","e","oldArray","preventDefault","ref","generateWordListElements","pos","caretDiv","w","idxw","wordDiv","c","idxc","caret","ele","faSync","ArtsyCode","ArtsyKey","DefaultKeyMaps","name","A","R","T","S","E","Y","I","O","StyledKeyMapper","borderColor","KeyMapper","keymaps","setKeyMaps","setKeyTimeout","setMapping","propOnChange","onMappingChanged","timeoutOnChange","onKeyTimeoutChanged","localStorage","getItem","customMap","JSON","parse","selectedMap","savedTimeout","parseInt","onKeyChanged","targetCode","targetKey","value","newMapping","newKeyMaps","filter","k","setItem","stringify","onChange","target","def","StyledApp","App","setKeyMap","src","logo","alt","href","rel","GlobalStyle","createGlobalStyle","backgroundColor","primaryColor","Typography","ReactDOM","render","React","StrictMode","ThemeProvider","secondaryColor","colorBlue","colorGreen","Reset","document","getElementById"],"mappings":"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","file":"static/js/main.8f7d2b2f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ba7ca334.png\";","import styled from \"styled-components\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface ButtonProps  {\r\n    active?: boolean;\r\n    disabled?: boolean;\r\n    icon?: IconDefinition;\r\n    tooltip?: string;\r\n    color?: string;\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement | undefined>;\r\n}\r\n\r\nfunction IconButton(props: ButtonProps) {\r\n    return (\r\n        <StyledIconButton className={ props.active ? 'active' : '' } disabled={props.disabled} title={props.tooltip} onClick={props.onClick} >\r\n            { props.icon != null && <FontAwesomeIcon icon={props.icon} /> }\r\n        </StyledIconButton>\r\n    );\r\n}\r\n\r\nconst StyledIconButton = styled.button`\r\n    margin: 0;\r\n    padding: 2px;\r\n    border: none;\r\n    background: none;\r\n    color: ${ p => p.theme.textColorFaded };\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: 1.2rem;\r\n\r\n    svg {\r\n        flex: 1;\r\n    }\r\n\r\n    :active:enabled {\r\n        color: black!important;\r\n        transform: scale(0.85);\r\n    }\r\n\r\n    :hover:enabled {\r\n        cursor: pointer;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n`;\r\n\r\nexport default IconButton;\r\n","export const Combos: { [id: string]: string } = { \r\n    \"KeyE_KeyO\": \"b\",\r\n    \"KeyE_KeyY\": \"c\" ,\r\n    \"KeyA_KeyR_KeyT\": \"d\" ,\r\n    \"KeyA_KeyR\": \"f\",\r\n    \"KeyR_KeyT\": \"g\",\r\n    \"KeyE_KeyI\": \"h\",\r\n    \"KeyS_KeyT\": \"j\",\r\n    \"KeyO_KeyY\": \"k\",\r\n    \"KeyE_KeyI_KeyY\": \"l\",\r\n    \"KeyI_KeyO_KeyY\": \"m\",\r\n    \"KeyI_KeyO\": \"n\",\r\n    \"KeyE_KeyI_KeyO\": \"p\",\r\n    \"KeyA_KeyS_KeyT\": \"q\",\r\n    \"KeyI_KeyY\": \"u\",\r\n    \"KeyR_KeyS\": \"v\",\r\n    \"KeyA_KeyS\": \"w\",\r\n    \"KeyR_KeyS_KeyT\": \"x\",\r\n    \"KeyA_KeyR_KeyS_KeyT\": \"z\",\r\n    \"KeyE_KeyI_KeyO_KeyY\": \"Space\",\r\n    \"KeyE_KeyR\": \"Backspace\"\r\n};","import randomWords from \"random-words\";\r\nimport styled from \"styled-components\";\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from './IconButton';\r\nimport useKeyMapper from '../effects/KeyMapperEffect';\r\nimport { KeyMapDefinition } from '../model/KeyMapDefinition';\r\n\r\ninterface ArtseyInputComponentProps {\r\n    keymap: KeyMapDefinition;\r\n    keyTimeout: number;\r\n}\r\n\r\nexport const ArtseyInput: FC<ArtseyInputComponentProps> = (props: ArtseyInputComponentProps) => {\r\n    const wordDivRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [isFocused, setFocused] = useState(false);\r\n    const [keyQueue, setKeyQueue] = useState<Array<React.KeyboardEvent<HTMLInputElement>>>([]);\r\n\r\n    const [caretPos, setCaretPos] = useState(0);\r\n    const [wordList, setWordList] = useState<Array<string>>(randomWords(25));\r\n    const [enteredKeys, setEnteredKeys] = useState<Array<string>>([]);\r\n\r\n    const [startTime, setStartTime] = useState<number>(0);\r\n    const [wpm, setWpm] = useState<number | null>(null);\r\n    \r\n    const getArtseyValue = useKeyMapper(props.keymap);\r\n\r\n    useEffect(() => reset(), []);        \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(keyQueue.length !== 0) {\r\n                const artsyKey = getArtseyValue(keyQueue);\r\n                registerKey(artsyKey);\r\n                calculateWpm(artsyKey);           \r\n                setKeyQueue([]);\r\n            }\r\n        }, props.keyTimeout);\r\n        return () => clearInterval(interval);\r\n    }, [keyQueue, enteredKeys, caretPos, getArtseyValue, wordList]);\r\n\r\n    const reset = () => {\r\n        setEnteredKeys([]);\r\n        setKeyQueue([]);\r\n        setCaretPos(0);\r\n        setStartTime(0);\r\n        setWpm(null);\r\n        setWordList(randomWords(25));\r\n        wordDivRef.current?.focus()\r\n    }\r\n\r\n    const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        setKeyQueue(oldArray => [...oldArray, e]);\r\n        e.preventDefault();\r\n    }\r\n\r\n    const generateWordListElements = (): Array<JSX.Element> => {\r\n        let pos = 0;\r\n        let caretDiv = <div id=\"caret\" key=\"caret\"></div>;\r\n        let words = wordList.map((w, idxw) => {\r\n            let wordDiv = <div className=\"word\" key={ idxw }>\r\n                { w.split(\"\").map((c, idxc) => {\r\n                    let caret = pos === caretPos ? caretDiv : undefined;\r\n                    let ele = enteredKeys.length - 1 >= pos\r\n                        ? <div className={ enteredKeys[pos] === c ? \"letter correct\" : \"letter wrong\" } key={ idxc }>{c}</div>\r\n                        : <div className=\"letter\" key={ idxc }>{c}</div>;\r\n                    pos++;\r\n                    return caret !== undefined ? [caret, ele] : [ele];\r\n                })}\r\n                { pos === caretPos && caretDiv }\r\n                <div className=\"space\"></div>\r\n            </div>\r\n            pos++;\r\n            return wordDiv;\r\n        });\r\n        return words;\r\n    }\r\n\r\n    const calculateWpm = (artsyKey: string | undefined): void => {\r\n        if(artsyKey !== undefined) {            \r\n            if(startTime === 0) setStartTime(new Date().getTime());\r\n            setWpm(Math.round(enteredKeys.length / 5 / ((new Date().getTime() - startTime) / 60000)));\r\n        }\r\n    }\r\n\r\n    const registerKey = (artsyKey: string | undefined): void => {\r\n        const joinedWordList = wordList.join(\" \");\r\n        if(artsyKey === \"Backspace\" && enteredKeys.length > 0) {\r\n            setEnteredKeys(prev => [...prev.slice(0, prev.length - 1)]);\r\n            setCaretPos(caretPos - 1);\r\n        }\r\n        else if(\r\n            artsyKey !== undefined && artsyKey !== \"Backspace\"\r\n            && ((joinedWordList.split(\"\")[caretPos] === \" \" && artsyKey === \"Space\") || joinedWordList.split(\"\")[caretPos] !== \" \")\r\n        ) {\r\n                setEnteredKeys(prev => [...prev, artsyKey as string]);\r\n                setCaretPos(caretPos + 1);\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <StyledArtseyInput>\r\n            <div id=\"word-list\" tabIndex={0} onFocus={ () => setFocused(true) } onBlur={ () => setFocused(false) } onKeyUp={ onKeyUp } ref={ wordDivRef }>\r\n                { !isFocused && <div id=\"focus-message\"><p>Focus Please</p></div> }\r\n                { generateWordListElements() }\r\n            </div>\r\n            <div id=\"monitor\">\r\n                <small id=\"keycode-monitor\">Last Registered: { enteredKeys.length !== 0 ? enteredKeys[enteredKeys.length - 1] : \"NONE\" }</small>\r\n                <small id=\"wpm-monitor\">WPM: { wpm !== null ? wpm : \"NONE\" }</small>\r\n            </div>\r\n            <IconButton icon={faSync} onClick={ reset } ></IconButton>            \r\n        </StyledArtseyInput>\r\n    );\r\n}\r\n\r\nconst StyledArtseyInput = styled.div`{}\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    align-content: stretch;\r\n    align-items: stretch;\r\n    margin: 100px 0;\r\n\r\n    #logo {\r\n        width: 150px;\r\n    }\r\n\r\n    #word-list {\r\n        position: relative;\r\n        font-size: 1.5rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        outline: 0;\r\n        -webkit-user-select: none; /* Safari */        \r\n        -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* IE10+/Edge */\r\n        user-select: none; /* Standard */\r\n    }\r\n\r\n    #monitor {\r\n        display: flex;\r\n        gap: 35px;\r\n    }\r\n\r\n    #keycode-monitor, #wpm-monitor {\r\n        text-align: left;\r\n        font-weight: bold;\r\n        margin: 10px 0;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    #caret {\r\n        display: block;\r\n        width: 0px;\r\n        border: 1px solid ${ p => p.theme.cursorColor };\r\n        animation: blinker 2s linear infinite;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    @keyframes blinker {\r\n        50% {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    #focus-message {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        background: rgba(255, 255, 255, 0.75);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        p { font-weight: bold; }\r\n    }\r\n\r\n    .word {\r\n        display: flex;\r\n        margin-right: 10px;\r\n        color: ${ p => p.theme.textColorFaded };\r\n    }\r\n\r\n    .correct { color: ${ p => p.theme.textColor }; }\r\n    .wrong { color: ${ p => p.theme.colorRed }; }\r\n`;\r\n\r\nexport default ArtseyInput;","import { Combos } from \"../model/ComboDefinition\";\r\nimport { ArtsyCode, KeyMapDefinition } from \"../model/KeyMapDefinition\";\r\n\r\nexport default function useKeyMapper(mapping: KeyMapDefinition) {\r\n    return (queue: Array<React.KeyboardEvent<HTMLInputElement>>): string | undefined => \r\n    {\r\n        let mappedKeys = [];\r\n        for(let i = 0; i < queue.length; i++) {\r\n            let foundKey = Object.keys(mapping.keys).find(v => mapping.keys[v as ArtsyCode].fromKey === queue[i].key);\r\n            if(foundKey !== undefined) mappedKeys.push(mapping.keys[foundKey as ArtsyCode]);\r\n        }\r\n        \r\n        let comboKeyCode = mappedKeys\r\n            .map(m => m.toCode)\r\n            .sort()\r\n            .reduce((pre, cur) => { return pre + (pre !== \"\" ? \"_\" : \"\") + cur }, \"\");\r\n\r\n        if(mappedKeys.length === 1) return mappedKeys[0].toKey;\r\n        else if(Combos.hasOwnProperty(comboKeyCode)) return Combos[comboKeyCode];\r\n        else return undefined;\r\n    };\r\n}","export type ArtsyKeyMapping = { fromKey: string, toCode: string, toKey: string }\r\nexport enum ArtsyCode {\r\n    A = \"KeyA\", R = \"KeyR\", T = \"KeyT\", S = \"KeyS\",\r\n    E = \"KeyE\", Y = \"KeyY\", I = \"KeyI\", O = \"KeyO\"\r\n}\r\n\r\nexport enum ArtsyKey {\r\n    A = \"a\", R = \"r\", T = \"t\", S = \"s\",\r\n    E = \"e\", Y = \"y\", I = \"i\", O = \"o\"\r\n}\r\n\r\nexport interface KeyMapDefinition {\r\n    name: string;\r\n    keys: Record<ArtsyCode, ArtsyKeyMapping>;\r\n}\r\n\r\nexport const DefaultKeyMaps: Array<KeyMapDefinition> = [\r\n    { name: \"Left Hand\", keys: { \r\n            [ArtsyCode.A]: { fromKey: \"t\", toCode: ArtsyCode.A, toKey: ArtsyKey.A }, \r\n            [ArtsyCode.R]: { fromKey: \"r\", toCode: ArtsyCode.R, toKey: ArtsyKey.R }, \r\n            [ArtsyCode.T]: { fromKey: \"e\", toCode: ArtsyCode.T, toKey: ArtsyKey.T }, \r\n            [ArtsyCode.S]: { fromKey: \"w\", toCode: ArtsyCode.S, toKey: ArtsyKey.S }, \r\n            [ArtsyCode.E]: { fromKey: \"g\", toCode: ArtsyCode.E, toKey: ArtsyKey.E }, \r\n            [ArtsyCode.Y]: { fromKey: \"f\", toCode: ArtsyCode.Y, toKey: ArtsyKey.Y }, \r\n            [ArtsyCode.I]: { fromKey: \"d\", toCode: ArtsyCode.I, toKey: ArtsyKey.I }, \r\n            [ArtsyCode.O]: { fromKey: \"s\", toCode: ArtsyCode.O, toKey: ArtsyKey.O }\r\n        }\r\n    },\r\n    { name: \"Right Hand\", keys: {\r\n            [ArtsyCode.A]: { fromKey: \"y\", toCode: ArtsyCode.A, toKey: ArtsyKey.A }, \r\n            [ArtsyCode.R]: { fromKey: \"u\", toCode: ArtsyCode.R, toKey: ArtsyKey.R }, \r\n            [ArtsyCode.T]: { fromKey: \"i\", toCode: ArtsyCode.T, toKey: ArtsyKey.T }, \r\n            [ArtsyCode.S]: { fromKey: \"o\", toCode: ArtsyCode.S, toKey: ArtsyKey.S }, \r\n            [ArtsyCode.E]: { fromKey: \"h\", toCode: ArtsyCode.E, toKey: ArtsyKey.E }, \r\n            [ArtsyCode.Y]: { fromKey: \"j\", toCode: ArtsyCode.Y, toKey: ArtsyKey.Y }, \r\n            [ArtsyCode.I]: { fromKey: \"k\", toCode: ArtsyCode.I, toKey: ArtsyKey.I }, \r\n            [ArtsyCode.O]: { fromKey: \"l\", toCode: ArtsyCode.O, toKey: ArtsyKey.O }\r\n        }\r\n    }\r\n];","import styled from \"styled-components\";\r\nimport { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { ArtsyCode, ArtsyKey, DefaultKeyMaps, KeyMapDefinition } from '../model/KeyMapDefinition';\r\n\r\ninterface KeyMapperComponentProps {\r\n    onMappingChanged: (mapping: KeyMapDefinition) => void;\r\n    onKeyTimeoutChanged: (timeout: number) => void;\r\n}\r\n\r\nexport const KeyMapper: FC<KeyMapperComponentProps> = (props: KeyMapperComponentProps) => {\r\n    const [keymaps, setKeyMaps] = useState(DefaultKeyMaps);\r\n    const [keyTimeout, setKeyTimeout] = useState(25);\r\n    const [mapping, setMapping] = useState<KeyMapDefinition>(DefaultKeyMaps[0]);\r\n    const propOnChange = props.onMappingChanged;\r\n    const timeoutOnChange = props.onKeyTimeoutChanged;\r\n\r\n    useEffect(() => {        \r\n        let keymap = localStorage.getItem(\"keymap\");\r\n        let customMap = keymap ? JSON.parse(keymap) as KeyMapDefinition : undefined;        \r\n        if(customMap) {\r\n            setKeyMaps(prev => [...prev, customMap as KeyMapDefinition]);\r\n        }\r\n\r\n        let selectedMap = localStorage.getItem(\"selectedMap\");\r\n        if(selectedMap && selectedMap !== \"Custom\") {\r\n            let mapping = DefaultKeyMaps.find(map => map.name === selectedMap);\r\n            if(mapping) setMapping(mapping);\r\n        }\r\n        else if(selectedMap && selectedMap === \"Custom\" && customMap) {            \r\n            setMapping(customMap);\r\n        }\r\n\r\n        let savedTimeout = localStorage.getItem(\"keyTimeout\");\r\n        if(savedTimeout) setKeyTimeout(parseInt(savedTimeout));\r\n    }, []);    \r\n    useEffect(() => { propOnChange(mapping); }, [mapping, propOnChange]);\r\n    useEffect(() => { timeoutOnChange(keyTimeout); }, [keyTimeout, timeoutOnChange]);\r\n\r\n    const onSelectionChanged = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let mapping = keymaps.find(map => map.name === e.target.value);\r\n        if(mapping) {\r\n            setMapping(mapping);\r\n            localStorage.setItem(\"selectedMap\", e.target.value);\r\n        }\r\n    };\r\n\r\n    const onTimeoutChanged  = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setKeyTimeout(parseInt(e.target.value));\r\n        localStorage.setItem(\"keyTimeout\", e.target.value);\r\n    };\r\n\r\n    const onKeyChanged = (targetCode: ArtsyCode, targetKey: ArtsyKey, value: string) => {\r\n        let newMapping: KeyMapDefinition = { name: \"Custom\", keys: { ...mapping.keys } };\r\n        newMapping.keys[targetCode] = { fromKey: value, toCode: targetCode, toKey: targetKey };\r\n\r\n        let newKeyMaps = keymaps.filter(k => k.name !== \"Custom\");\r\n        newKeyMaps.push(newMapping);\r\n\r\n        setKeyMaps(newKeyMaps);\r\n        setMapping(newMapping);\r\n        localStorage.setItem(\"selectedMap\", \"Custom\");\r\n        localStorage.setItem(\"keymap\", JSON.stringify(newMapping));\r\n    };\r\n\r\n    return (\r\n        <StyledKeyMapper>\r\n            <p>\r\n                This is the key mapper. It maps the keys of your keyboard to the indicated keys of artsey. The default mapping is for a left handed usage.\r\n                If you are already using combos or mod taps on your keyboard, make sure, that you are not using the regarding keys in the mapping. This can cause problems.\r\n            </p>\r\n            <p>Please select a predefined mapping or define one yourself. The mapping will be saved between sessions.</p>\r\n            <select value={ mapping?.name } onChange={ onSelectionChanged }>\r\n                { keymaps.map(def => <option value={ def.name } key={ def.name }>{ def.name }</option>) }\r\n            </select>\r\n            <div id=\"key-map\">\r\n                <div id=\"artsey-map-a\" className=\"key\">A <input value={ mapping?.keys[ArtsyCode.A].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.A, ArtsyKey.A, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-r\" className=\"key\">R <input value={ mapping?.keys[ArtsyCode.R].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.R, ArtsyKey.R, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-t\" className=\"key\">T <input value={ mapping?.keys[ArtsyCode.T].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.T, ArtsyKey.T, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-s\" className=\"key\">S <input value={ mapping?.keys[ArtsyCode.S].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.S, ArtsyKey.S, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-e\" className=\"key\">E <input value={ mapping?.keys[ArtsyCode.E].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.E, ArtsyKey.E, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-y\" className=\"key\">Y <input value={ mapping?.keys[ArtsyCode.Y].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.Y, ArtsyKey.Y, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-i\" className=\"key\">I <input value={ mapping?.keys[ArtsyCode.I].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.I, ArtsyKey.I, e.target.value) }></input></div>\r\n                <div id=\"artsey-map-o\" className=\"key\">O <input value={ mapping?.keys[ArtsyCode.O].fromKey } onChange={ (e) => onKeyChanged(ArtsyCode.O, ArtsyKey.O, e.target.value) }></input></div>\r\n            </div>            \r\n            <p>\r\n                The combo registration works with a predefined timer. All buttons pressed during the defined timeout will be registered as one combo. If you are struggeling to get\r\n                four button combos to work, it might help to increase the timeout.\r\n            </p>\r\n            <div id=\"artsey-timeout\"><span>Combo Timeout</span><input value={ keyTimeout } onChange={ onTimeoutChanged }></input><span>ms</span></div>\r\n        </StyledKeyMapper>\r\n    );\r\n}\r\n\r\nconst StyledKeyMapper = styled.div`{}\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    select {\r\n        display: block;\r\n        margin-bottom: 20px;\r\n        border: 1px solid ${ p => p.theme.borderColor };\r\n        border-radius: 5px;\r\n        padding: 10px;\r\n        background: white;\r\n        color: ${ p => p.theme.textColor };\r\n        font-size: 1rem;\r\n    }\r\n\r\n    #artsey-timeout {\r\n        margin-top: 15px;        \r\n        margin-bottom: 15px;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        input {\r\n            max-width: 75px;\r\n            margin-left: 15px;\r\n            margin-right: 5px;\r\n            border: 1px solid ${ p => p.theme.borderColor };\r\n            border-radius: 5px;\r\n            padding: 10px;\r\n            background: white;\r\n            color: ${ p => p.theme.textColor };\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    #key-map {\r\n        display: inline-grid;\r\n        gap: 10px;        \r\n        margin-bottom: 25px;\r\n    }\r\n\r\n    .key {\r\n        border: 1px solid ${ p => p.theme.borderColor };\r\n        border-radius: 5px;\r\n        width: 50px;\r\n        height: 50px;\r\n        padding: 10px 5px;\r\n        font-weight: bold;\r\n        text-align: center;\r\n\r\n        input {\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            border: 1px solid ${ p => p.theme.borderColor };\r\n            text-align: center;\r\n            font-size: 0.8rem;\r\n            padding: 5px;\r\n        }\r\n    }\r\n\r\n    #artsey-map-a {\r\n        grid-row: 1;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-r {\r\n        grid-row: 1;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-t {\r\n        grid-row: 1;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-s {\r\n        grid-row: 1;\r\n        grid-column: 4;\r\n    }\r\n\r\n    #artsey-map-e {\r\n        grid-row: 2;\r\n        grid-column: 1;\r\n    }\r\n\r\n    #artsey-map-y {\r\n        grid-row: 2;\r\n        grid-column: 2;\r\n    }\r\n\r\n    #artsey-map-i {\r\n        grid-row: 2;\r\n        grid-column: 3;\r\n    }\r\n\r\n    #artsey-map-o {\r\n        grid-row: 2;\r\n        grid-column: 4;\r\n    }\r\n`;\r\n\r\nexport default KeyMapper;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport logo from './assets/logo.png';\r\nimport ArtseyInput from './components/ArtseyInput';\r\nimport KeyMapper from \"./components/KeyMapper\";\r\nimport { DefaultKeyMaps, KeyMapDefinition } from \"./model/KeyMapDefinition\";\r\n\r\nfunction App() {    \r\n    const [keymap, setKeyMap] = useState<KeyMapDefinition>(DefaultKeyMaps[0]);\r\n    const [keyTimeout, setKeyTimeout] = useState(25);\r\n\r\n    return (\r\n        <StyledApp>\r\n            <img src={logo} alt=\"logo\" id=\"logo\" />\r\n            <h1>ARTSEY Tester</h1>\r\n            <p>\r\n                On this site you're able to test the great ARTSEY layout. Without the need of a dedicated keyboard. The tester supports all alpha key combos, space and backspace.\r\n                To learn more about ARTSEY visit the <a href=\"https://artsey.io\" title=\"ARTSEY Website\" target=\"_blank\" rel=\"noreferrer\">website</a>.<br/>\r\n            </p>\r\n            <p className=\"no-margin\"><a href=\"https://raw.githubusercontent.com/artseyio/artsey/main/layout%20diagrams/current.jpg\" title=\"ARTSEY Cheatsheet\">Cheatsheet</a> - <a href=\"Learning_Artsey.pdf\" title=\"Learn ARTSEY Book\">Learn ARTSEY Book</a></p>\r\n            <ArtseyInput keymap={ keymap } keyTimeout={ keyTimeout }></ArtseyInput>\r\n            <KeyMapper onMappingChanged={ setKeyMap } onKeyTimeoutChanged={ setKeyTimeout }></KeyMapper>\r\n        </StyledApp>\r\n    );\r\n}\r\n\r\nconst StyledApp = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    max-width: 700px;\r\n    margin: 25px auto;\r\n\r\n    #logo {\r\n        width: 150px;S\r\n    }\r\n\r\n    .no-margin {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nfunction Typography() {\r\n    return <GlobalStyle/>;\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body, #root {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n    }\r\n\r\n    body {\r\n        background: ${ p => p.theme.backgroundColor };\r\n        color: ${ p => p.theme.textColor };\r\n        line-height: 1.65;\r\n        font-weight: 400;\r\n        font-family: Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue,sans-serif;\r\n        overflow:hidden;\r\n    }\r\n\r\n    p { margin-bottom: 1.15rem; text-align: justify; }\r\n\r\n    h1, h2, h3, h4, h5 {\r\n        margin: 0 0 2rem 0;\r\n        line-height: 1.15;\r\n        font-weight: 100;\r\n    }\r\n    \r\n    h1 {\r\n        margin-top: 0;\r\n        font-size: 2.488em;\r\n    }\r\n\r\n    h2 { font-size: 2.074em; }\r\n    h3 { font-size: 1.728em; }\r\n    h4 { font-size: 1.44em; }\r\n    h5 { font-size: 1.2em; }\r\n    small, .text-small { font-size: 0.833em; color: #777777; }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: ${ p => p.theme.primaryColor };\r\n        &:hover {\r\n            font-weight: bold;\r\n        }\r\n        i {\r\n            vertical-align: middle;\r\n            color: ${ p => p.theme.textColorFaded };\r\n            &:hover { color: ${ p => p.theme.primaryColor }; }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Typography;","import { Reset } from 'styled-reset';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Typography from './components/Typography';\r\n\r\nconst Theme = {\r\n    textColor: \"#525252\",\r\n    textColorFaded: \"#bebebe\",\r\n    primaryColor: \"#0068b4\",\r\n    secondaryColor: \"#0098ff\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\r\n    colorRed: \"#ff4a4a\",\r\n    colorBlue: \"#4c5fff\",\r\n    colorGreen: \"#2ea169\",\r\n    cursorColor: \"#1E1E1E\"\r\n};\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={Theme}>\r\n            <Reset/>\r\n            <Typography/>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}